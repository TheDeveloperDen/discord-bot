name: Lint and Test

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "**/*.md"
      - "docs/**"
      - "logs/**"
      - "result/**"
  pull_request:
    branches: ["master"]
    paths-ignore:
      - "**/*.md"
      - "docs/**"
      - "logs/**"
      - "result/**"
  schedule:
    - cron: "29 4 * * 1"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deps:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Add system libs for native modules
        run: sudo apt update && sudo apt install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Cache Bun package downloads
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-cache-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-cache-
      - name: Cache node_modules
        id: node-modules-cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Upload node_modules artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ runner.os }}-${{ hashFiles('bun.lock') }}
          path: node_modules
          if-no-files-found: warn

  lint:
    name: Lint
    needs: deps
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ runner.os }}-${{ hashFiles('bun.lock') }}
          path: node_modules
      - name: Run Biome
        run: bunx --bun biome ci

  typecheck:
    name: Type Check
    needs: deps
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ runner.os }}-${{ hashFiles('bun.lock') }}
          path: node_modules
      - name: Run TypeScript type check
        run: bunx tsc --noEmit -p tsconfig.json

  build:
    name: Build
    needs: deps
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ runner.os }}-${{ hashFiles('bun.lock') }}
          path: node_modules
      - name: Build TypeScript
        run: bun run build
      - name: Upload build artifact (bin)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-bin-${{ github.sha }}
          path: bin
          if-no-files-found: ignore

  test:
    name: Unit Tests
    needs: deps
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Add system libs for native modules (runtime)
        run: sudo apt update && sudo apt install -y libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ runner.os }}-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Run Unit Tests with coverage
        run: CLICOLOR=1 bun test:retry --coverage --coverage-reporter=lcov

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ runner.os }}-${{ github.run_id }}
          path: |
            coverage
          if-no-files-found: ignore
